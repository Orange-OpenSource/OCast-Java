/*
 * Software Name : OCast SDK
 *
 *  Copyright (C) 2017 Orange
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

description = "Mediroute module f the OCast SDK. Provides integration with the Android MediaRouter"

apply plugin: 'com.android.library'
apply from: "$rootDir/publish.gradle"

android {
    buildToolsVersion "26.0.2"
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
}

task javadoc(type: Javadoc) {
    failOnError false
    title null
    options.doclet = "com.google.doclava.Doclava"
    options.docletpath = configurations.doclava.files.asType(List)
    options.classpath += configurations.doclavacp.files.asType(List)
    source = android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing.publications {
    android.libraryVariants.all { variant ->
        if (variant.buildType.name == "release") {

            mavenJava(MavenPublication) {
                groupId project.group
                artifactId 'mediaroute'
                version project.version
                artifact variant.outputs[0].packageLibrary
                artifact sourcesJar
                artifact javadocJar

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    def root = asNode()
                    root.appendNode('description', 'Android MediaRouter support for OCast SDK')
                    root.appendNode('name', 'ocast-mediaroute')
                    root.children().last() + pomConfig
                    configurations.implementation.allDependencies.each {
                        if (it.group == null) return
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation "com.android.support:mediarouter-v7:${rootProject.ext.versionSupportLibrary}"
    implementation project(':discovery')
}
